/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated;


import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.generated.tables.Ausleihe;
import org.jooq.generated.tables.Ausstattungsgegenstand;
import org.jooq.generated.tables.Benutzer;
import org.jooq.generated.tables.Besprechung;
import org.jooq.generated.tables.Person;
import org.jooq.generated.tables.Raum;
import org.jooq.generated.tables.Role;
import org.jooq.generated.tables.Teilnahme;
import org.jooq.generated.tables.UserRole;
import org.jooq.generated.tables.records.AusleiheRecord;
import org.jooq.generated.tables.records.AusstattungsgegenstandRecord;
import org.jooq.generated.tables.records.BenutzerRecord;
import org.jooq.generated.tables.records.BesprechungRecord;
import org.jooq.generated.tables.records.PersonRecord;
import org.jooq.generated.tables.records.RaumRecord;
import org.jooq.generated.tables.records.RoleRecord;
import org.jooq.generated.tables.records.TeilnahmeRecord;
import org.jooq.generated.tables.records.UserRoleRecord;
import org.jooq.impl.Internal;
import org.jooq.types.UInteger;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>meetnow</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<AusstattungsgegenstandRecord, UInteger> IDENTITY_AUSSTATTUNGSGEGENSTAND = Identities0.IDENTITY_AUSSTATTUNGSGEGENSTAND;
    public static final Identity<BenutzerRecord, UInteger> IDENTITY_BENUTZER = Identities0.IDENTITY_BENUTZER;
    public static final Identity<BesprechungRecord, UInteger> IDENTITY_BESPRECHUNG = Identities0.IDENTITY_BESPRECHUNG;
    public static final Identity<PersonRecord, UInteger> IDENTITY_PERSON = Identities0.IDENTITY_PERSON;
    public static final Identity<RaumRecord, UInteger> IDENTITY_RAUM = Identities0.IDENTITY_RAUM;
    public static final Identity<RoleRecord, UInteger> IDENTITY_ROLE = Identities0.IDENTITY_ROLE;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AusleiheRecord> KEY_AUSLEIHE_PRIMARY = UniqueKeys0.KEY_AUSLEIHE_PRIMARY;
    public static final UniqueKey<AusstattungsgegenstandRecord> KEY_AUSSTATTUNGSGEGENSTAND_PRIMARY = UniqueKeys0.KEY_AUSSTATTUNGSGEGENSTAND_PRIMARY;
    public static final UniqueKey<BenutzerRecord> KEY_BENUTZER_PRIMARY = UniqueKeys0.KEY_BENUTZER_PRIMARY;
    public static final UniqueKey<BenutzerRecord> KEY_BENUTZER_PERSONID = UniqueKeys0.KEY_BENUTZER_PERSONID;
    public static final UniqueKey<BenutzerRecord> KEY_BENUTZER_BENUTZERNAME = UniqueKeys0.KEY_BENUTZER_BENUTZERNAME;
    public static final UniqueKey<BesprechungRecord> KEY_BESPRECHUNG_PRIMARY = UniqueKeys0.KEY_BESPRECHUNG_PRIMARY;
    public static final UniqueKey<PersonRecord> KEY_PERSON_PRIMARY = UniqueKeys0.KEY_PERSON_PRIMARY;
    public static final UniqueKey<PersonRecord> KEY_PERSON_EMAIL = UniqueKeys0.KEY_PERSON_EMAIL;
    public static final UniqueKey<RaumRecord> KEY_RAUM_PRIMARY = UniqueKeys0.KEY_RAUM_PRIMARY;
    public static final UniqueKey<RoleRecord> KEY_ROLE_PRIMARY = UniqueKeys0.KEY_ROLE_PRIMARY;
    public static final UniqueKey<TeilnahmeRecord> KEY_TEILNAHME_PRIMARY = UniqueKeys0.KEY_TEILNAHME_PRIMARY;
    public static final UniqueKey<UserRoleRecord> KEY_USER_ROLE_PRIMARY = UniqueKeys0.KEY_USER_ROLE_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AusleiheRecord, BesprechungRecord> AUSLEIHE_IBFK_1 = ForeignKeys0.AUSLEIHE_IBFK_1;
    public static final ForeignKey<AusleiheRecord, AusstattungsgegenstandRecord> AUSLEIHE_IBFK_2 = ForeignKeys0.AUSLEIHE_IBFK_2;
    public static final ForeignKey<BenutzerRecord, PersonRecord> BENUTZER_IBFK_1 = ForeignKeys0.BENUTZER_IBFK_1;
    public static final ForeignKey<BesprechungRecord, RaumRecord> BESPRECHUNG_IBFK_2 = ForeignKeys0.BESPRECHUNG_IBFK_2;
    public static final ForeignKey<BesprechungRecord, PersonRecord> BESPRECHUNG_IBFK_1 = ForeignKeys0.BESPRECHUNG_IBFK_1;
    public static final ForeignKey<TeilnahmeRecord, PersonRecord> TEILNAHME_IBFK_1 = ForeignKeys0.TEILNAHME_IBFK_1;
    public static final ForeignKey<TeilnahmeRecord, BesprechungRecord> TEILNAHME_IBFK_2 = ForeignKeys0.TEILNAHME_IBFK_2;
    public static final ForeignKey<UserRoleRecord, BenutzerRecord> ROLE_IBFK_1 = ForeignKeys0.ROLE_IBFK_1;
    public static final ForeignKey<UserRoleRecord, RoleRecord> ROLE_IBFK_2 = ForeignKeys0.ROLE_IBFK_2;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<AusstattungsgegenstandRecord, UInteger> IDENTITY_AUSSTATTUNGSGEGENSTAND = Internal.createIdentity(Ausstattungsgegenstand.AUSSTATTUNGSGEGENSTAND, Ausstattungsgegenstand.AUSSTATTUNGSGEGENSTAND.AUSSTATTUNGSGEGENSTANDID);
        public static Identity<BenutzerRecord, UInteger> IDENTITY_BENUTZER = Internal.createIdentity(Benutzer.BENUTZER, Benutzer.BENUTZER.BENUTZERID);
        public static Identity<BesprechungRecord, UInteger> IDENTITY_BESPRECHUNG = Internal.createIdentity(Besprechung.BESPRECHUNG, Besprechung.BESPRECHUNG.BESPRECHUNGID);
        public static Identity<PersonRecord, UInteger> IDENTITY_PERSON = Internal.createIdentity(Person.PERSON, Person.PERSON.PERSONID);
        public static Identity<RaumRecord, UInteger> IDENTITY_RAUM = Internal.createIdentity(Raum.RAUM, Raum.RAUM.RAUMID);
        public static Identity<RoleRecord, UInteger> IDENTITY_ROLE = Internal.createIdentity(Role.ROLE, Role.ROLE.ROLEID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<AusleiheRecord> KEY_AUSLEIHE_PRIMARY = Internal.createUniqueKey(Ausleihe.AUSLEIHE, "KEY_ausleihe_PRIMARY", Ausleihe.AUSLEIHE.BESPRECHUNGID, Ausleihe.AUSLEIHE.AUSSTATTUNGSGEGENSTANDID);
        public static final UniqueKey<AusstattungsgegenstandRecord> KEY_AUSSTATTUNGSGEGENSTAND_PRIMARY = Internal.createUniqueKey(Ausstattungsgegenstand.AUSSTATTUNGSGEGENSTAND, "KEY_ausstattungsgegenstand_PRIMARY", Ausstattungsgegenstand.AUSSTATTUNGSGEGENSTAND.AUSSTATTUNGSGEGENSTANDID);
        public static final UniqueKey<BenutzerRecord> KEY_BENUTZER_PRIMARY = Internal.createUniqueKey(Benutzer.BENUTZER, "KEY_benutzer_PRIMARY", Benutzer.BENUTZER.BENUTZERID);
        public static final UniqueKey<BenutzerRecord> KEY_BENUTZER_PERSONID = Internal.createUniqueKey(Benutzer.BENUTZER, "KEY_benutzer_PersonId", Benutzer.BENUTZER.PERSONID);
        public static final UniqueKey<BenutzerRecord> KEY_BENUTZER_BENUTZERNAME = Internal.createUniqueKey(Benutzer.BENUTZER, "KEY_benutzer_Benutzername", Benutzer.BENUTZER.BENUTZERNAME);
        public static final UniqueKey<BesprechungRecord> KEY_BESPRECHUNG_PRIMARY = Internal.createUniqueKey(Besprechung.BESPRECHUNG, "KEY_besprechung_PRIMARY", Besprechung.BESPRECHUNG.BESPRECHUNGID);
        public static final UniqueKey<PersonRecord> KEY_PERSON_PRIMARY = Internal.createUniqueKey(Person.PERSON, "KEY_person_PRIMARY", Person.PERSON.PERSONID);
        public static final UniqueKey<PersonRecord> KEY_PERSON_EMAIL = Internal.createUniqueKey(Person.PERSON, "KEY_person_Email", Person.PERSON.EMAIL);
        public static final UniqueKey<RaumRecord> KEY_RAUM_PRIMARY = Internal.createUniqueKey(Raum.RAUM, "KEY_raum_PRIMARY", Raum.RAUM.RAUMID);
        public static final UniqueKey<RoleRecord> KEY_ROLE_PRIMARY = Internal.createUniqueKey(Role.ROLE, "KEY_role_PRIMARY", Role.ROLE.ROLEID);
        public static final UniqueKey<TeilnahmeRecord> KEY_TEILNAHME_PRIMARY = Internal.createUniqueKey(Teilnahme.TEILNAHME, "KEY_teilnahme_PRIMARY", Teilnahme.TEILNAHME.PERSONID, Teilnahme.TEILNAHME.BESPRECHUNGID);
        public static final UniqueKey<UserRoleRecord> KEY_USER_ROLE_PRIMARY = Internal.createUniqueKey(UserRole.USER_ROLE, "KEY_user_role_PRIMARY", UserRole.USER_ROLE.BENUTZERID, UserRole.USER_ROLE.ROLEID);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<AusleiheRecord, BesprechungRecord> AUSLEIHE_IBFK_1 = Internal.createForeignKey(org.jooq.generated.Keys.KEY_BESPRECHUNG_PRIMARY, Ausleihe.AUSLEIHE, "ausleihe_ibfk_1", Ausleihe.AUSLEIHE.BESPRECHUNGID);
        public static final ForeignKey<AusleiheRecord, AusstattungsgegenstandRecord> AUSLEIHE_IBFK_2 = Internal.createForeignKey(org.jooq.generated.Keys.KEY_AUSSTATTUNGSGEGENSTAND_PRIMARY, Ausleihe.AUSLEIHE, "ausleihe_ibfk_2", Ausleihe.AUSLEIHE.AUSSTATTUNGSGEGENSTANDID);
        public static final ForeignKey<BenutzerRecord, PersonRecord> BENUTZER_IBFK_1 = Internal.createForeignKey(org.jooq.generated.Keys.KEY_PERSON_PRIMARY, Benutzer.BENUTZER, "benutzer_ibfk_1", Benutzer.BENUTZER.PERSONID);
        public static final ForeignKey<BesprechungRecord, RaumRecord> BESPRECHUNG_IBFK_2 = Internal.createForeignKey(org.jooq.generated.Keys.KEY_RAUM_PRIMARY, Besprechung.BESPRECHUNG, "besprechung_ibfk_2", Besprechung.BESPRECHUNG.RAUMID);
        public static final ForeignKey<BesprechungRecord, PersonRecord> BESPRECHUNG_IBFK_1 = Internal.createForeignKey(org.jooq.generated.Keys.KEY_PERSON_PRIMARY, Besprechung.BESPRECHUNG, "besprechung_ibfk_1", Besprechung.BESPRECHUNG.BESITZERPID);
        public static final ForeignKey<TeilnahmeRecord, PersonRecord> TEILNAHME_IBFK_1 = Internal.createForeignKey(org.jooq.generated.Keys.KEY_PERSON_PRIMARY, Teilnahme.TEILNAHME, "teilnahme_ibfk_1", Teilnahme.TEILNAHME.PERSONID);
        public static final ForeignKey<TeilnahmeRecord, BesprechungRecord> TEILNAHME_IBFK_2 = Internal.createForeignKey(org.jooq.generated.Keys.KEY_BESPRECHUNG_PRIMARY, Teilnahme.TEILNAHME, "teilnahme_ibfk_2", Teilnahme.TEILNAHME.BESPRECHUNGID);
        public static final ForeignKey<UserRoleRecord, BenutzerRecord> ROLE_IBFK_1 = Internal.createForeignKey(org.jooq.generated.Keys.KEY_BENUTZER_PRIMARY, UserRole.USER_ROLE, "role_ibfk_1", UserRole.USER_ROLE.BENUTZERID);
        public static final ForeignKey<UserRoleRecord, RoleRecord> ROLE_IBFK_2 = Internal.createForeignKey(org.jooq.generated.Keys.KEY_ROLE_PRIMARY, UserRole.USER_ROLE, "role_ibfk_2", UserRole.USER_ROLE.ROLEID);
    }
}
