/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.generated.Indexes;
import org.jooq.generated.Keys;
import org.jooq.generated.Meetnow;
import org.jooq.generated.tables.records.RaumRecord;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Raum extends TableImpl<RaumRecord> {

    private static final long serialVersionUID = -153569597;

    /**
     * The reference instance of <code>meetnow.raum</code>
     */
    public static final Raum RAUM = new Raum();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RaumRecord> getRecordType() {
        return RaumRecord.class;
    }

    /**
     * The column <code>meetnow.raum.RaumId</code>.
     */
    public final TableField<RaumRecord, UInteger> RAUMID = createField("RaumId", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>meetnow.raum.Ort</code>.
     */
    public final TableField<RaumRecord, String> ORT = createField("Ort", org.jooq.impl.SQLDataType.CHAR(50).nullable(false), this, "");

    /**
     * The column <code>meetnow.raum.anzahlStuhl</code>.
     */
    public final TableField<RaumRecord, UInteger> ANZAHLSTUHL = createField("anzahlStuhl", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>meetnow.raum.anzahlTisch</code>.
     */
    public final TableField<RaumRecord, UInteger> ANZAHLTISCH = createField("anzahlTisch", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>meetnow.raum.anzahlLaptop</code>.
     */
    public final TableField<RaumRecord, UInteger> ANZAHLLAPTOP = createField("anzahlLaptop", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>meetnow.raum.Whiteboard</code>.
     */
    public final TableField<RaumRecord, Byte> WHITEBOARD = createField("Whiteboard", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>meetnow.raum.Barrierefrei</code>.
     */
    public final TableField<RaumRecord, Byte> BARRIEREFREI = createField("Barrierefrei", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>meetnow.raum.Klimaanlage</code>.
     */
    public final TableField<RaumRecord, Byte> KLIMAANLAGE = createField("Klimaanlage", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * Create a <code>meetnow.raum</code> table reference
     */
    public Raum() {
        this(DSL.name("raum"), null);
    }

    /**
     * Create an aliased <code>meetnow.raum</code> table reference
     */
    public Raum(String alias) {
        this(DSL.name(alias), RAUM);
    }

    /**
     * Create an aliased <code>meetnow.raum</code> table reference
     */
    public Raum(Name alias) {
        this(alias, RAUM);
    }

    private Raum(Name alias, Table<RaumRecord> aliased) {
        this(alias, aliased, null);
    }

    private Raum(Name alias, Table<RaumRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Raum(Table<O> child, ForeignKey<O, RaumRecord> key) {
        super(child, key, RAUM);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Meetnow.MEETNOW;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.RAUM_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<RaumRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_RAUM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RaumRecord> getPrimaryKey() {
        return Keys.KEY_RAUM_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RaumRecord>> getKeys() {
        return Arrays.<UniqueKey<RaumRecord>>asList(Keys.KEY_RAUM_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Raum as(String alias) {
        return new Raum(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Raum as(Name alias) {
        return new Raum(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Raum rename(String name) {
        return new Raum(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Raum rename(Name name) {
        return new Raum(name, null);
    }
}
