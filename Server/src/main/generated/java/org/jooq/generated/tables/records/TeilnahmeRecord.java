/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.generated.tables.Teilnahme;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TeilnahmeRecord extends UpdatableRecordImpl<TeilnahmeRecord> implements Record2<UInteger, UInteger> {

    private static final long serialVersionUID = 1762291895;

    /**
     * Setter for <code>meetnow.teilnahme.PersonId</code>.
     */
    public TeilnahmeRecord setPersonid(UInteger value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>meetnow.teilnahme.PersonId</code>.
     */
    public UInteger getPersonid() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>meetnow.teilnahme.BesprechungId</code>.
     */
    public TeilnahmeRecord setBesprechungid(UInteger value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>meetnow.teilnahme.BesprechungId</code>.
     */
    public UInteger getBesprechungid() {
        return (UInteger) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<UInteger, UInteger> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<UInteger, UInteger> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<UInteger, UInteger> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field1() {
        return Teilnahme.TEILNAHME.PERSONID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field2() {
        return Teilnahme.TEILNAHME.BESPRECHUNGID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger component1() {
        return getPersonid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger component2() {
        return getBesprechungid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value1() {
        return getPersonid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value2() {
        return getBesprechungid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TeilnahmeRecord value1(UInteger value) {
        setPersonid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TeilnahmeRecord value2(UInteger value) {
        setBesprechungid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TeilnahmeRecord values(UInteger value1, UInteger value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TeilnahmeRecord
     */
    public TeilnahmeRecord() {
        super(Teilnahme.TEILNAHME);
    }

    /**
     * Create a detached, initialised TeilnahmeRecord
     */
    public TeilnahmeRecord(UInteger personid, UInteger besprechungid) {
        super(Teilnahme.TEILNAHME);

        set(0, personid);
        set(1, besprechungid);
    }
}
